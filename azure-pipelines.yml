trigger:
  branches:
    include:
      - main  # or your default branch (e.g., master)

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: Checkout@1
    displayName: 'Checkout code from GitHub'

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.x'  # Use the appropriate version for your project
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # Restore NuGet packages using dotnet restore
  - script: |
      dotnet restore **/*.sln  # Restores the solution's NuGet packages
    displayName: 'Restore NuGet packages'

  # Build the solution using DotNetCoreCLI
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.sln'  # Path to your .sln file
      buildConfiguration: $(buildConfiguration)

  # Publish the build using DotNetCoreCLI
  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      projects: '**/*.sln'  # Path to your .sln file
      publishWebProjects: false
      zipAfterPublish: false
      buildConfiguration: $(buildConfiguration)
      outputPath: '$(Build.ArtifactStagingDirectory)'

  # Commit and push changes (if necessary)
  - script: |
      git config --global user.email "youremail@example.com"
      git config --global user.name "Your Name"
      git add .
      git commit -m "Auto commit from Azure Pipeline"
      git push origin main  # or the branch you're working with
    displayName: 'Commit and Push changes back to GitHub'

  # Publish build artifacts (optional)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Path to where the artifacts are located
      ArtifactName: 'drop'
      publishLocation: 'Container'
