trigger:
- main  # Trigger the pipeline on changes to 'main'

pool:
  vmImage: ubuntu-latest  # Using Ubuntu as the base image

steps:
- script: echo "Running the pipeline"
  displayName: 'Run Pre-build Steps'

# Ensure Git config is set up for commit and push
- script: |
    git config --global user.email "youremail@example.com"
    git config --global user.name "Your Name"
  displayName: 'Set Git User Information'

# Verify if there are changes and commit them
- script: |
    git diff --quiet || echo "Changes detected"
    git add .  # Add all changes (if any)
    if ! git diff --cached --quiet; then
      git commit -m "Update modified files from pipeline"
      git push origin main  # Push changes to GitHub (ensure 'main' is your default branch)
    else
      echo "No changes to commit"
    fi
  displayName: 'Commit and Push Changes to GitHub (if any)'

# List build directory to ensure files are being generated correctly
- script: |
    ls -la $(Build.ArtifactStagingDirectory)  # Check if program files are generated
  displayName: 'List Build Directory'




# Copy all updated files to the artifact staging directory
- task: CopyFiles@2
  inputs:
    contents: '**/*'  # Copy all files (including subdirectories)
    targetFolder: '$(Build.ArtifactStagingDirectory)'  # Copy to the staging directory
  displayName: 'Copy All Updated Files to Staging Directory'


# Publish build artifacts (so they can be used in deployment or downloaded)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'  # The path where files are staged
    artifactName: 'drop'  # The name of the artifact being published
  displayName: 'Publish Build Artifacts'
